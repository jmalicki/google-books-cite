"""LaTeX generation utilities."""


def generate_latex_command(citation_key: str, google_books_id: str) -> str:
    """
    Generate LaTeX command to register a Google Books ID.
    
    Args:
        citation_key: BibTeX citation key
        google_books_id: Google Books ID (not full URL, just the ID)
        
    Returns:
        LaTeX \\SetGoogleBooksID command
    """
    # Extract ID if full URL was provided (for backwards compatibility)
    if 'books.google.com' in google_books_id:
        # Extract ID from URL
        import urllib.parse
        parsed = urllib.parse.urlparse(google_books_id)
        params = urllib.parse.parse_qs(parsed.query)
        if 'id' in params:
            google_books_id = params['id'][0]
    
    return f"\\SetGoogleBooksID{{{citation_key}}}{{{google_books_id}}}"


def generate_latex_file(commands: list[str], header: str = "") -> str:
    """
    Generate a complete LaTeX file with Google Books ID commands.
    
    Args:
        commands: List of \\SetGoogleBooksID commands
        header: Optional header comment
        
    Returns:
        Complete LaTeX file content
    """
    lines = [
        "% Google Books IDs",
        "% Auto-generated by gbfind",
        "% Add these to your document preamble (before \\begin{document})",
        "",
    ]
    
    if header:
        lines.extend([f"% {line}" for line in header.split('\n')])
        lines.append("")
    
    lines.extend(commands)
    lines.append("")
    
    return '\n'.join(lines)

